@use 'sass:math';

.flex,
%display-flex,
%d-flex {
    display: flex;
}

//* justify-content
%justify {
    &-center,
    &-c {
        justify-content: center;
    }
    &-sa {
        justify-content: space-around;
    }
    &-sb {
        justify-content: space-between;
    }
    &-se {
        justify-content: space-evenly;
    }
    &-fs {
        justify-content: flex-start;
    }
    &-fe {
        justify-content: flex-end;
    }
}

//* align-items
%align-items,
%ai {
    &-center,
    &-c {
        align-items: center;
    }
    &-fs {
        align-items: flex-start;
    }
    &-fe {
        align-items: flex-end;
    }
    &-st {
        align-items: stretch;
    }
}

//* flex-direction
%flex,
%flex-direction,
%flex-d {
    &-row,
    &-r {
        flex-direction: row;
    }
    &-row-reverse,
    &-rr {
        flex-direction: row-reverse;
    }
    &-column,
    &-cl {
        flex-direction: column;
    }
    &-column-reverse,
    &-cr {
        flex-direction: column-reverse;
    }
}

//* flex-wrap
%flex {
    &-wrap,
    &-w {
        flex-wrap: wrap;
    }
    &-nowrap,
    &-nw {
        flex-wrap: nowrap;
    }
    &-wrap-reverse,
    &-wr {
        flex-wrap: wrap-reverse;
    }
}

//* flex-flow
%flex-flow,
%ff {
    //* row
    &-default,
    &-d,
    &-r-nw {
        flex-flow: row nowrap;
    }
    &-r-w {
        flex-flow: row wrap;
    }
    &-rr-nw {
        flex-flow: row-reverse nowrap;
    }
    &-rr-w {
        flex-flow: row-reverse wrap;
    }
    //* column
    &-cl-nw {
        flex-flow: column nowrap;
    }
    &-cl-w {
        flex-flow: column wrap;
    }
    &-cr-nw {
        flex-flow: column-reverse nowrap;
    }
    &-cr-w {
        flex-flow: column-reverse wrap;
    }
}

@mixin flex-container($jc: null, $ai: null, $fd: null, $ff: null) {
    $flex-map: (
        c: center,
        sa: space-around,
        sb: space-between,
        se: space-evenly,
        fs: flex-start,
        fe: flex-end,
        bl: baseline,
        st: stretch,

        r: row,
        rr: row-reverse,
        cl: column,
        cr: column-reverse,

        r-nw: row nowrap,
        r-w: row wrap,
        rr-nw: row-reverse nowrap,
        rr-w: row-reverse wrap,
        cl-nw: column nowrap,
        cl-w: column wrap,
        cr-nw: column-reverse nowrap,
        cr-w: column-reverse wrap,
    );

    $justify-content: center;
    $align-items: center;
    $flex-direction: row;
    $flex-flow: row nowrap;

    @each $key, $value in $flex-map {
        //* justify-content
        // Correct values: c|center, sa|space-around, sb|space-between, se|space-evenly, null
        @if $jc == $key {
            $justify-content: #{map-get($flex-map, $jc)};
        } @else if $jc == $value {
            $justify-content: $value;
        }

        //* align-items
        // Correct values: c|center, fs|flex-start, fe|flex-end, st|strech, bl|baseline, null
        @if $ai == $key {
            $align-items: #{map-get($flex-map, $ai)};
        } @else if $ai == $value {
            $align-items: $value;
        }

        //* flex-direction
        // Correct values: r|row, rr|row-reverse, cl|column, cr|column-reverse, null
        @if $fd == $key {
            $flex-direction: #{map-get($flex-map, $fd)};
        } @else if $fd == $value {
            $flex-direction: $value;
        }

        //* flex-flow
        // Correct values: 'r-nw'|row nowrap, 'r-w'|row wrap, 'rr-nw'|row-reverse nowrap, 'rr-w'|row-reverse wrap, 'cl-nw'|column nowrap, 'cl-w'|column wrap, 'cr-nw'|column-reverse nowrap, 'cr-w'|column-reverse wrap,
        @if $ff == $key {
            $flex-flow: #{map-get($flex-map, $ff)};
        } @else if $fd == $value {
            $flex-flow: $value;
        }
    }

    display: flex;

    @if $jc != null {
        justify-content: $justify-content;
    }
    @if $ai != null {
        align-items: $align-items;
    }
    @if $fd != null {
        flex-direction: $flex-direction;
    }
    @if $ff != null {
        flex-flow: $flex-flow;
    }
}

@mixin flex($grow, $shrink, $base) {
    flex: $grow $shrink $base;
}
@mixin flex-column($grow, $shrink, $col) {
    flex: $grow $shrink math.percentage(math.div($col, 12));
}
@mixin flex-col($grow, $shrink, $col) {
    @include flex-column($grow, $shrink, $col);
}

%flex {
    //* no-direction no-flex-flow (default: row nowrap)
    //* only $jc and $ai
    &-c {
        @include flex-container(c, c);

        &-c {
            @include flex-container(c, c);
        }

        &-fs {
            @include flex-container(c, fs);
        }

        &-fe {
            @include flex-container(c, fe);
        }

        &-st {
            @include flex-container(c, st);
        }

        &-bl {
            @include flex-container(c, bl);
        }
    }
    &-sa {
        @include flex-container(sa, c);

        &-c {
            @include flex-container(sa, c);
        }

        &-fs {
            @include flex-container(sa, fs);
        }

        &-fe {
            @include flex-container(sa, fe);
        }

        &-st {
            @include flex-container(sa, st);
        }

        &-bl {
            @include flex-container(sa, bl);
        }
    }
    &-sb {
        @include flex-container(sb, c);

        &-c {
            @include flex-container(sb, c);
        }

        &-fs {
            @include flex-container(sb, fs);
        }

        &-fe {
            @include flex-container(sb, fe);
        }

        &-st {
            @include flex-container(sb, st);
        }

        &-bl {
            @include flex-container(sb, bl);
        }
    }
    &-se {
        @include flex-container(se, c);

        &-c {
            @include flex-container(se, c);
        }

        &-fs {
            @include flex-container(se, fs);
        }

        &-fe {
            @include flex-container(se, fe);
        }

        &-st {
            @include flex-container(se, st);
        }

        &-bl {
            @include flex-container(se, bl);
        }
    }
    &-fs {
        @include flex-container(fs, c);

        &-c {
            @include flex-container(fs, c);
        }

        &-fs {
            @include flex-container(fs, fs);
        }

        &-fe {
            @include flex-container(fs, fe);
        }

        &-st {
            @include flex-container(fs, st);
        }

        &-bl {
            @include flex-container(fs, bl);
        }
    }
    &-fe {
        @include flex-container(fe, c);

        &-c {
            @include flex-container(fe, c);
        }

        &-fs {
            @include flex-container(fe, fs);
        }

        &-fe {
            @include flex-container(fe, fe);
        }

        &-st {
            @include flex-container(fe, st);
        }

        &-bl {
            @include flex-container(fe, bl);
        }
    }

    //* row
    &-row {
        &-c {
            @include flex-container(c, c, r);

            &-c {
                @include flex-container(c, c, r);
            }

            &-fs {
                @include flex-container(c, fs, r);
            }

            &-fe {
                @include flex-container(c, fe, r);
            }

            &-st {
                @include flex-container(c, st, r);
            }

            &-bl {
                @include flex-container(c, bl, r);
            }
        }

        &-sa {
            @include flex-container(sa, c, r);

            &-c {
                @include flex-container(sa, c, r);
            }

            &-fs {
                @include flex-container(sa, fs, r);
            }

            &-fe {
                @include flex-container(sa, fe, r);
            }

            &-st {
                @include flex-container(sa, st, r);
            }

            &-bl {
                @include flex-container(sa, bl, r);
            }
        }

        &-sb {
            @include flex-container(sb, c, r);

            &-c {
                @include flex-container(sb, c, r);
            }

            &-fs {
                @include flex-container(sb, fs, r);
            }

            &-fe {
                @include flex-container(sb, fe, r);
            }

            &-st {
                @include flex-container(sb, st, r);
            }

            &-bl {
                @include flex-container(sb, bl, r);
            }
        }

        &-se {
            @include flex-container(se, c, r);

            &-c {
                @include flex-container(se, c, r);
            }

            &-fs {
                @include flex-container(se, fs, r);
            }

            &-fe {
                @include flex-container(se, fe, r);
            }

            &-st {
                @include flex-container(se, st, r);
            }

            &-bl {
                @include flex-container(se, bl, r);
            }
        }

        &-fs {
            @include flex-container(fs, c, r);

            &-c {
                @include flex-container(fs, c, r);
            }

            &-fs {
                @include flex-container(fs, fs, r);
            }

            &-fe {
                @include flex-container(fs, fe, r);
            }

            &-st {
                @include flex-container(fs, st, r);
            }

            &-bl {
                @include flex-container(fs, bl, r);
            }
        }

        &-fe {
            @include flex-container(fe, c, r);

            &-c {
                @include flex-container(fe, c, r);
            }

            &-fs {
                @include flex-container(fe, fs, r);
            }

            &-fe {
                @include flex-container(fe, fe, r);
            }

            &-st {
                @include flex-container(fe, st, r);
            }

            &-bl {
                @include flex-container(fe, bl, r);
            }
        }
    }

    //* column
    &-column,
    &-col {
        &-c {
            @include flex-container(c, c, cl);

            &-c {
                @include flex-container(c, c, cl);
            }

            &-fs {
                @include flex-container(c, fs, cl);
            }

            &-fe {
                @include flex-container(c, fe, cl);
            }

            &-st {
                @include flex-container(c, st, cl);
            }

            &-bl {
                @include flex-container(c, bl, cl);
            }
        }

        &-sa {
            @include flex-container(sa, c, cl);

            &-c {
                @include flex-container(sa, c, cl);
            }

            &-fs {
                @include flex-container(sa, fs, cl);
            }

            &-fe {
                @include flex-container(sa, fe, cl);
            }

            &-st {
                @include flex-container(sa, st, cl);
            }

            &-bl {
                @include flex-container(sa, bl, cl);
            }
        }

        &-sb {
            @include flex-container(sb, c, cl);

            &-c {
                @include flex-container(sb, c, cl);
            }

            &-fs {
                @include flex-container(sb, fs, cl);
            }

            &-fe {
                @include flex-container(sb, fe, cl);
            }

            &-st {
                @include flex-container(sb, st, cl);
            }

            &-bl {
                @include flex-container(sb, bl, cl);
            }
        }

        &-se {
            @include flex-container(se, c, cl);

            &-c {
                @include flex-container(se, c, cl);
            }

            &-fs {
                @include flex-container(se, fs, cl);
            }

            &-fe {
                @include flex-container(se, fe, cl);
            }

            &-st {
                @include flex-container(se, st, cl);
            }

            &-bl {
                @include flex-container(se, bl, cl);
            }
        }

        &-fs {
            @include flex-container(fs, c, cl);

            &-c {
                @include flex-container(fs, c, cl);
            }

            &-fs {
                @include flex-container(fs, fs, cl);
            }

            &-fe {
                @include flex-container(fs, fe, cl);
            }

            &-st {
                @include flex-container(fs, st, cl);
            }

            &-bl {
                @include flex-container(fs, bl, cl);
            }
        }

        &-fe {
            @include flex-container(fe, c, cl);

            &-c {
                @include flex-container(fe, c, cl);
            }

            &-fs {
                @include flex-container(fe, fs, cl);
            }

            &-fe {
                @include flex-container(fe, fe, cl);
            }

            &-st {
                @include flex-container(fe, st, cl);
            }

            &-bl {
                @include flex-container(fe, bl, cl);
            }
        }
    }

    //* flex-flow
    &-flex-flow,
    &-ff {
        //* row
        &-default,
        &-d,
        &-r,
        &-r-nw {
            @include flex-container($ff: r-nw);
        }
        &-r-w {
            @include flex-container($ff: r-w);
        }
        &-rr,
        &-rr-nw {
            @include flex-container($ff: rr-nw);
        }
        &-rr-w {
            @include flex-container($ff: rr-w);
        }
        //* column
        &-cl,
        &-cl-nw {
            @include flex-container($ff: cl-nw);
        }
        &-cl-w {
            @include flex-container($ff: cl-w);
        }
        &-cr,
        &-cr-nw {
            @include flex-container($ff: cr-nw);
        }
        &-cr-w {
            @include flex-container($ff: cr-w);
        }
    }

    //* only $jc justify-content
    &-jc {
        &-c {
            @include flex-container($jc: c);
        }
    }

    //* only $ai align-items
    &-ai {
        &-c {
            @include flex-container($ai: c);
        }
        &-fs {
            @include flex-container($ai: fs);
        }
        &-fe {
            @include flex-container($ai: fe);
        }
        &-st {
            @include flex-container($ai: st);
        }
    }
}

// .test1 {
//     @extend %flex-jc-c;
// }
// .test2 {
//     @extend %flex-jc-c;
// }
